{
  "name": "deep_research_agent",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "user_message",
              "name": "user_message",
              "type": "string",
              "value": "={{ $json.chatInput }}"
            }
          ]
        },
        "includeOtherFields": true,
        "options": {}
      },
      "id": "15109ce2-df12-4caa-9754-b9aa74fcb02a",
      "name": "Set Input",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        112,
        -144
      ]
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_message }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=You are a deep research assistant. Use tools to gather information (openai_search for research, think_tool for reflection). Keep searches focused, reflect after searches using the think_tool to decide if more searches are needed to satisfy the user's query, and finish with a concise, well-structured research answer.\n\nWhen finished, produce:\n- reasoning: brief plan and justification\n- action: the primary tool used (one of: openai_search, think_tool, answer_direct)\n- tool_result: the most relevant tool output you used (may be empty for answer_direct)\n- answer: the final research answer/report\n\nBe clear, factual, and professional.",
          "maxIterations": 5,
          "returnIntermediateSteps": false
        }
      },
      "id": "4db5fa2a-b16f-487e-9b0c-44d45b4569a2",
      "name": "AI Agent",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        336,
        -144
      ]
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "final_answer",
              "name": "final_answer",
              "type": "string",
              "value": "={{ $json.output.answer }}"
            },
            {
              "id": "reasoning",
              "name": "reasoning",
              "type": "string",
              "value": "={{ $json.output.reasoning }}"
            },
            {
              "id": "action_taken",
              "name": "action_taken",
              "type": "string",
              "value": "={{ $json.output.action }}"
            },
            {
              "id": "tool_result",
              "name": "tool_result",
              "type": "string",
              "value": "={{ $json.output.tool_result }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ea9bb63f-66ff-4404-8980-0fa6abc69b9d",
      "name": "Format Output",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        896,
        -144
      ]
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"reasoning\": \"Brief plan and justification for the research approach\",\n  \"action\": \"openai_search\",\n  \"tool_result\": \"Most relevant tool output used to answer\",\n  \"answer\": \"Final research answer/report\"\n}",
        "autoFix": true
      },
      "id": "8ff372c9-cf33-4ff2-8dda-ec1d3694e555",
      "name": "Structured Output Parser",
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        816,
        96
      ]
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $workflow.id }}{{ $now }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        64,
        80
      ],
      "id": "07f6ebb4-b2a6-459c-917a-16159ce30552",
      "name": "Simple Memory"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1.1,
      "position": [
        256,
        80
      ],
      "id": "ecd20cca-ab0e-4ff7-9aba-6512b99c3c09",
      "name": "Think"
    },
    {
      "parameters": {
        "toolDescription": "Use this tool when you want to run a deep research on a user query. ",
        "text": "={{ $fromAI(\"query\") }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        400,
        80
      ],
      "id": "cf358a69-b5dd-42ff-8f1d-00a568635fc0",
      "name": "openai_search1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini-search-preview",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini-search-preview"
        },
        "options": {}
      },
      "id": "ed576a64-7385-4a0f-b455-58c943454b18",
      "name": "gpt-40-mini-search=preview",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        400,
        224
      ],
      "credentials": {
        "openAiApi": {
          "id": "aEwEH5APyXx6cq8g",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "gpt-4.1-mini"
        },
        "options": {
          "maxTokens": 2000,
          "temperature": 0.7
        }
      },
      "id": "dd51fa68-8fa5-496d-b670-52351a2ee369",
      "name": "gpt-4.1-mini",
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -64,
        80
      ],
      "credentials": {
        "openAiApi": {
          "id": "aEwEH5APyXx6cq8g",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Deep research agent",
        "height": 672,
        "width": 1360,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -224,
        -256
      ],
      "id": "544a34c5-5cc1-43b2-b843-c2384ca7d8e5",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "### Tools",
        "height": 320,
        "width": 512,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        208,
        48
      ],
      "id": "3154d9f1-99b7-4bae-80a2-6ebad7d93635",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "### Schema Validation",
        "height": 320,
        "width": 368,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        736,
        48
      ],
      "id": "5b4165f5-93e1-49d0-9d7e-854553f313f9",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        816,
        240
      ],
      "id": "59ae57b2-5672-42b5-8520-0977f46d7b2e",
      "name": "gpt-4.1-mini #2",
      "credentials": {
        "openAiApi": {
          "id": "aEwEH5APyXx6cq8g",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "content": "### Inteligence",
        "height": 176,
        "width": 368,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        -176,
        48
      ],
      "id": "2a44c941-3888-4258-8795-248c56531de9",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -128,
        -144
      ],
      "id": "c9edbc8b-6ce4-487e-af56-13c99c33afd6",
      "name": "When chat message received",
      "webhookId": "8ff1eaf5-5386-4ebc-a4a8-400ec17a1e68"
    }
  ],
  "pinData": {},
  "connections": {
    "Set Input": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Format Output",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "openai_search1": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "gpt-40-mini-search=preview": {
      "ai_languageModel": [
        [
          {
            "node": "openai_search1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4.1-mini": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "gpt-4.1-mini #2": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Set Input",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "777e93bc-0ee2-486b-8dc3-d8bbc30bdf3e",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "fb04b4346f624bab301ba87af3de742ec86c55ec1dfa2ee5f5fef9aebaad9741"
  },
  "id": "Q8YWuM6cFWJQjJ4n",
  "tags": []
}